# Generated by Django 5.0.3 on 2024-07-06 09:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='chet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.TextField(blank=True, max_length=255, verbose_name='понедельник')),
                ('tuesday', models.TextField(blank=True, max_length=255, verbose_name='вторник')),
                ('wednesday', models.TextField(blank=True, max_length=255, verbose_name='среда')),
                ('thursday', models.TextField(blank=True, max_length=255, verbose_name='четверг')),
                ('friday', models.TextField(blank=True, max_length=255, verbose_name='пятница')),
                ('saturday', models.TextField(blank=True, max_length=255, verbose_name='суббота')),
            ],
        ),
        migrations.CreateModel(
            name='groups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('name', models.TextField(blank=True, max_length=20, unique=True, verbose_name='название группы')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='слаг группы')),
                ('dep_number', models.TextField(blank=True, max_length=255, verbose_name='номер факультета')),
                ('faculty', models.TextField(blank=True, max_length=255, verbose_name='название факультета')),
            ],
        ),
        migrations.CreateModel(
            name='nechet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.TextField(blank=True, max_length=255, verbose_name='понедельник')),
                ('tuesday', models.TextField(blank=True, max_length=255, verbose_name='вторник')),
                ('wednesday', models.TextField(blank=True, max_length=255, verbose_name='среда')),
                ('thursday', models.TextField(blank=True, max_length=255, verbose_name='четверг')),
                ('friday', models.TextField(blank=True, max_length=255, verbose_name='пятница')),
                ('saturday', models.TextField(blank=True, max_length=255, verbose_name='суббота')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Контент')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_starosta', models.BooleanField(default=False, verbose_name='староста')),
                ('status', models.TextField(blank=True, default=None, max_length=100, verbose_name='cтатус')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('Group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chet', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chet_shedule', to='main.chet')),
                ('nechet', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nechet_shedule', to='main.nechet')),
            ],
        ),
        migrations.AddField(
            model_name='groups',
            name='schedule',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_shedule', to='main.schedule'),
        ),
    ]
